import React, { ReactNode, useRef, useState } from 'react'
import { createPortal } from 'react-dom'

const aboutBlurbParas = [
    "I’m a software developer in the renewable energy sector, currently creating web based plugins used to monitor real-time data in custom micro-grid setups.",
    "My love for learning and solving problems with the skills that I learn are what motivate me as a software developer. I am always interested in finding out how things work under the hood and thoroughly enjoy getting stuck deep in the documentation.",
    "I started out as a teacher, I studied Mathematics and Physics Education and taught these subjects for two years at a high school level. After two years of teaching I had the opportunity to create online Physical Science learning materials for the UCT Online High School. ",
    "Creating online content led me to realise my passion for software. This was a result of me writing simple HTML, CSS and some JavaScript for two years while creating content on the Moodle Learning Management platform.",
    "This passion evolved and I pursued a full stack web development bootcamp in my spare time to learn how to write production level JavaScript code.",
    "I finally found a position at a renewable energy monitoring and control company and have now written software that lets clients visualise data generated by their micro-grid plants.",
    "In addition to the plugins that I create, I have also spearheaded the company’s migration to TypeScript and React from vanilla JavaScript and have been involved in setting up an efficient continuous development and integration process to help deploy plugins efficiently and effectively.",
    "I have also switched to Linux since starting this new position and have been having an absolute blast learning how to interface with computers more efficiently with extremely powerful tools.",
    "While automating my workflows and trying to write optimally performant code, I have found myself wanting to go even deeper into understanding how things work under the hood. As a result, I have subsequently started learning a lower level programming language and have even used it to create a simple internal tool that assists in the plugin build process.",
    "I am always excited to learn new skills and look forward to building a lot more awesome software in future!",
]
const skills = [
    {
        icon: "todo",
        name: "TypeScript"
    },
    {
        icon: "todo",
        name: "React.js"
    },
    {
        icon: "todo",
        name: "Node.js"
    },
    {
        icon: "todo",
        name: "Linux"
    },
    {
        icon: "todo",
        name: "Git"
    },
    {
        icon: "todo",
        name: "Rust"
    },
]
const experience = [
    {
        company: "Infinity Renewable Solutions",
        role: "Software Developer",
        dateRange: "October 2023 - present",
    },
    {
        company: "Valenture Institute (UCT Online High School)",
        role: "Learning Designer Physical Science",
        dateRange: "Sep 2021 - Sep 2023",
    },
    {
        company: "Norman Henshilwood High School:",
        role: "Mathematics teacher",
        dateRange: "Aug 2020 - Sep 2021",
    },
    {
        company: "Rosebank Progress College",
        role: "Physical Science and Mathematics teacher",
        dateRange: "June 2019 - June 2020",
    },
]
const education = [
    {
        institution: "Hyperion Dev",
        field: "Full Stack Web Development Bootcamp",
        dateRange: "2023",
    },
    {
        institution: "Cape Peninsula University of Technology",
        field: "BEd: Mathematics and Physics",
        dateRange: "2019",
    },
    {
        institution: "City Varsity",
        field: "Diploma in Sound Engineering",
        dateRange: "2015",
    },
    {
        institution: "Westerford High School",
        field: "NSC Senior Certificate",
        dateRange: "2012",
    },

]

const CvSection = () => {
    return (
        <div>
            <h1>Resumé</h1>
            <h5>subtitle</h5>

            <CvSectionContainer
                heading='About'
                icon='SomeIcon'
            >
                <h3>Here's a little something about me...</h3>
                {
                    aboutBlurbParas.map((para, index) => {
                        return <p key={index}>
                            {para}
                        </p>
                    })
                }
            </CvSectionContainer>
            <CvSectionContainer
                heading='Skills'
                icon='SomeIcon'
            >
                <h3>My Skills</h3>
                {
                    skills.map((skill, index) => {
                        return <div key={index} className="skill-container">
                            {skill.icon}
                            {skill.name}
                        </div>
                    })
                }
            </CvSectionContainer>

        </div>
    )
}

type CvSectionContainerProps = {
    icon: string,
    heading: string,
    // The children here is what I want to show when the modal shows.
    children: ReactNode,
}

const CvSectionContainer = ({ children, heading, icon }: CvSectionContainerProps) => {
    const [showModal, setShowModal] = useState(false);
    const modalBackgroundRef = useRef<HTMLDivElement>(null)
    return (
        <>
            <div onClick={(_) => {
                setShowModal(prev => !prev)
            }} className='cv-section-container'>
                <div className="icon-container">
                    {icon}
                    {/* <svg>TODO</svg> */}
                </div>
                <h3 className="cv-section-heading">{heading}</h3>

            </div>
            {showModal && createPortal(
                (
                    <div
                        ref={modalBackgroundRef}
                        onClick={(e) => {
                            if(e.target === modalBackgroundRef.current){
                                setShowModal(false)
                            }
                        }}
                        className="modal-background"
                    >
                        <div className="modal-container">
                            <div className="close-modal-button" onClick={(_) => setShowModal(prev => !prev)}>X</div>
                            {children}
                        </div>
                    </div>
                ),
                document.getElementById("modal-container")!
            )}
        </>
    )
}

export default CvSection